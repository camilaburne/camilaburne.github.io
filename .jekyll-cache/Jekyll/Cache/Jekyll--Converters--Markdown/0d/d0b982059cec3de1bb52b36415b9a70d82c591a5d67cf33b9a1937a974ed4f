I"ï<h1 id="c√≥digo-resumen-para-el-an√°lisis-de-datos-en-r">C√≥digo resumen para el an√°lisis de Datos en R</h1>

<p>Les comparto un c√≥digo que sirve de ayuda para limpiar y analizar datos en R en menos de 10 pasos. Yo lo tengo guardado como .txt as√≠ cada vez que empiezo un proyecto nuevo, lo abro para no tener que buscar ni escribir las mismas funciones que uso cada vez. Dejo los pasos a continuaci√≥n, con el c√≥digo de cada uno, y el
<a href="/download/resume.pdf" class="download">archivo txt para que te lo descargues</a>.</p>

<h3 id="pasos">Pasos:</h3>

<ol>
  <li><strong>Directorio</strong> - Elegir un directorio (carpeta) para tu c√≥digo o verificar que est√°s en el correcto.</li>
  <li><strong>Abrir</strong> un conjunto de datos .csv en R como un dataframe (df).</li>
  <li><strong>Dimensionar</strong> la forma y tama√±o del df, columnas, tipos de variables y estad√≠sticas resumen para tener una idea de tus datos.</li>
  <li><strong>Seleccionar</strong> subgrupos de variables y/o filas.</li>
  <li><strong>Cambiar tipos</strong> de variable (de factor a texto, de num√©rica a n√∫mero entero).</li>
  <li><strong>Filtrar</strong> datos por condiciones o reglas.</li>
  <li><strong>Limpiar</strong> duplicados o imputar valores perdidos</li>
  <li><strong>Visualizar</strong> datos agregados y gr√°ficos.</li>
  <li><strong>Exportar</strong> el dataframe como .csv</li>
</ol>

<h3 id="c√≥digo">C√≥digo:</h3>

<pre>
# 1 DIRECTORIO  

# getwd() para ver el directorio en el que est√°s ahora
# setwd() para cambiarlo si no era el correcto
# list.files() imprime lo que hay adentro

getwd()
setwd("/Users/camilaburne/myR/Rsheets")
list.files()

</pre>

<p><img src="/images/template-analisis-datos-R-p1.png" class="postimg" /></p>

<pre>
# 2 ABRIR  

# Abrir archivos que est√©n dentro del directorio
# poniendo el nombre en donde dice 'file'
# read.csv(file, header = TRUE, sep = ",")

df01 &lt;- read.csv("base_ejemplo.csv")
df02 &lt;- read.csv(list.files()[1])

</pre>

<p><img src="/images/template-analisis-datos-R-p2.png" /></p>

<pre>
# 3 DIMENSIONAR  

# Funciones para ver qu√© son y qu√© tienen los df
# dim() devuelve el nro de filas y columnas
# name() muestra las columnas
# head() y tail() las primeras y √∫lt filas

dim(df01)
names(df01)
head(df01, 10)
tail(df01,  2)

# Funciones para ver qu√© son y qu√© tienen las variables
# typeof() te dice qu√© tipo de objeto es

typeof(df01$grupo)
typeof(df01$gasto)
typeof(df01$nombre)

# Funciones para ver sus estad√≠sticas resumen
# mean() y median() para ver promedio y mediana
# range() y sd() para ver rango y dispersi√≥n
# quantile() es para ver los percentiles

mean(df01$gasto)
median(df01$gasto)

range(df01$gasto)
sd(df01$gasto)

quantile(df01$gasto, 0.5)
summary(df01)

</pre>

<pre>
# 4 SELECCIONAR  

# Seleccionar una variable solita, con &amp; o [ ]
df01$nombre
df01[ ,'nombre']

# Seleccionar un par de filas y de columnas con [ ]
# y pasando el nombre de columnas y n√∫mero de filas
df01[1:10, ]
df01[c(1,10,20,30), c('nombre','gasto')]
df01[c(1,10,20,30), c(1,2)]

</pre>

<pre>
# 5 CAMBIAR TIPOS

# Funciones para cambiar el tipo de variable
df01$nombre &lt;- as.character(df01$nombre)
df01$gasto  &lt;- as.numeric(df01$gasto)
df01$gasto_redondo &lt;- as.integer(df01$gasto)

</pre>

<pre>
# 6 FILTRAR

# Seleccionar filas usando filtros. Operadores √∫tiles:
#  &amp;     cumple TODAS las conduciones (Y)
#  |     cumple AL MENOS una condicion (O)
#  %in%  contenido en  

df01[df01$gasto &lt; 70, ]
df01[df01$gasto &lt; 100  &amp; df01$grupo==1, ]

df01[!(df01$mes=='enero'),]
df01[!(df01$mes=='enero' | df01$mes=='marzo'),]

df01[df01$grupo %in% c(1,2,3), ]

grup12 = c(1,2)
vars   = c(1,4)
df01[df01$grupo %in% grup12, vars]

# Una vez que te interesa un subgrupo que filtraste
# Conviene guardarlo en un df o variable nueva

gastos    &lt;- as.data.frame(df01$gasto)
meses     &lt;- unique(df01$mes)
df01enero &lt;- df01[df01$mes=='enero',]

</pre>

<pre>
# 7 LIMPIAR

# is.na() te dice TRUE si hay datos perdidos
# Para reemplazarlos:

df01$pct[is.na(df01$pct)] = 0

# duplicated() devuelve TRUE si hay repetidos
# Para encontrar duplicados:
df01$doble &lt;- duplicated(df01)
table(df01$doble)

# Crear df nuevo sin duplicados
df01unico &lt;- subset(df01, df01$doble==FALSE)

nrow(df01)
nrow(df01unico)

</pre>

<pre>
# 8 VISUALIZAR

# Funciones para sacar conteos, porcentajes,
# y graficar scatterplots, gr√°fico de barras, histogramas

table(df01unico$tipo)
prop.table(table(df01unico$tipo))

hist(df01unico$pct, col = 'navyblue', border = 'white')
plot(df01unico$gasto, df01unico$pct, pch=19)
barplot(table(df01unico$grupo))

</pre>

<pre>
# 9 EXPORTAR

# revisar d√≥nde lo estoy guardando

getwd()
write.csv(df01unico, 'baseok.csv', row.names = F)

</pre>
:ET